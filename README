#################################
# Marlon Junior Barbosa Marques #
# Compiladores - DCC            #
# UFMG / 2016-2                 #
#################################

TP5 - Geração de Código em COOL
===============================


Etapas da Geração de Código
---------------------------

Como de costume, dividi essa etapa em várias passadas -- no caso, três. Na primeira, é montado o grafo de 
herança (código que já havia sido disponibilizado). Na segunda, diversas informações sobre as classes são 
anotadas nas mesmas, tais como a class tag, o valor padrão, suas tabelas de despacho, o layout dos objetos, 
entre outros itens que compõe a parte de dados do programa em MIPS.

Na terceira etapa, finalmente, eu gero o código de cada método presente no programa, iterando recursivamente
sobre as expressões dos mesmos. Nesta etapa eu utilizo extensivamente as estruturas criadas nas passadas 
anteriores, como por exemplo a "coordenada" de cada variável (se ela está na pilha ou no objeto, e qual
seu offset, entre outros).

Testes
------

Adotei uma estratégia ligeiramente mais "manual" neste TP. Fui criando pequenos métodos no arquivo
example.cl, cada qual testava uma funcionalidade apenas. Por exemplo: criei o método Main.add, Main.sub,
Main.lt, Main.dispatch, etc.

Averiguei a corretude do Gerador de Código analisando minuciosamente o arquivo assembly gerado pelo mesmo
(example.s). 


Limitações Conhecidas
----------------------

Devido à limitações de tempo, as seguintes instruções não foram implementadas:
  * Case
  
Além disso, não foi possível testar o gerador de código com a extensão que eu gostaria. 
